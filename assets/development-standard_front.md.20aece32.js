import{_ as s,c as a,o as n,O as l}from"./chunks/framework.07cac50c.js";const F=JSON.parse('{"title":"前端开发规范","description":"","frontmatter":{},"headers":[],"relativePath":"development-standard/front.md"}'),p={name:"development-standard/front.md"},o=l(`<h1 id="前端开发规范" tabindex="-1">前端开发规范 <a class="header-anchor" href="#前端开发规范" aria-label="Permalink to &quot;前端开发规范&quot;">​</a></h1><table><thead><tr><th>版本 <div style="width:100px;"></div></th><th>日期 <div style="width:130px;"></div></th><th>修订人 <div style="width:105px;"></div></th><th>描述（注明修改的条款或页） <div style="width:220px;"></div></th></tr></thead><tbody><tr><td>V1.0</td><td>2023/04/24</td><td>Asa</td><td>init</td></tr></tbody></table><h2 id="好代码的原则" tabindex="-1">好代码的原则 <a class="header-anchor" href="#好代码的原则" aria-label="Permalink to &quot;好代码的原则&quot;">​</a></h2><ul><li><p>（Passes its tests）：通过所有测试,强调的是外部需求，这是代码实现最重要的尽可能消除重复</p></li><li><p>(Minimizes duplication)：最大限度减少重复,代码的模块架构设计，保证代码的正交性，保证代码更容易修改尽可能清晰表达</p></li><li><p>(Maximizes clarity)：最大化清晰，代码的可阅读性，保证代码是容易阅读的更少代码元素</p></li><li><p>(Has fewer elements)：保证代码是简洁的</p></li></ul><p>以上四个原则的重要程度依次降低。</p><h2 id="_1-命名规范" tabindex="-1">1.命名规范 <a class="header-anchor" href="#_1-命名规范" aria-label="Permalink to &quot;1.命名规范&quot;">​</a></h2><h3 id="_1-1-项目命名" tabindex="-1">1.1 <strong>项目命名</strong> <a class="header-anchor" href="#_1-1-项目命名" aria-label="Permalink to &quot;1.1 **项目命名**&quot;">​</a></h3><p>全部采用小写方式，以中划线分隔（kebab-case）</p><p>正例：mall-management-system</p><p>反例：mall_management-system / mallManagementSystem</p><h3 id="_1-2-页面-路由命名" tabindex="-1">1.2 <strong>页面/路由命名</strong> <a class="header-anchor" href="#_1-2-页面-路由命名" aria-label="Permalink to &quot;1.2 **页面/路由命名**&quot;">​</a></h3><p>全部采用小写方式，以中划线分隔（kebab-case）</p><p>正例：goods、work-order</p><p>反例：Goods / workOrder</p><h3 id="_1-3-组件命名" tabindex="-1">1.3 组件<strong>命名</strong> <a class="header-anchor" href="#_1-3-组件命名" aria-label="Permalink to &quot;1.3 组件**命名**&quot;">​</a></h3><h3 id="_1-3-1-全部采用小写方式-以中划线分隔-kebab-case" tabindex="-1">1.3.1 全部采用小写方式，以中划线分隔（kebab-case） <a class="header-anchor" href="#_1-3-1-全部采用小写方式-以中划线分隔-kebab-case" aria-label="Permalink to &quot;1.3.1 全部采用小写方式，以中划线分隔（kebab-case）&quot;">​</a></h3><p>正例：upload-file</p><p>反例：uploadFile / UploadFile / upload_file</p><h4 id="_1-3-2-命名规则" tabindex="-1">1.3.2 命名规则 <a class="header-anchor" href="#_1-3-2-命名规则" aria-label="Permalink to &quot;1.3.2 命名规则&quot;">​</a></h4><p>公共组件（src/components/）命名以实际为主</p><p>示例：upload-file</p><p>页面级组件（pages/xxx/components/）使用页面名称作为前缀</p><p>路径 src/pages/user/components/</p><p>对话框组件命名：</p><p>正例：user-create-dialog</p><p>反例：create-dialog / create-user-dialog</p><h4 id="_1-3-3-组件使用" tabindex="-1">1.3.3 组件使用 <a class="header-anchor" href="#_1-3-3-组件使用" aria-label="Permalink to &quot;1.3.3 组件使用&quot;">​</a></h4><p>组件引用使用大驼峰命名规则</p><p>dom 中组件以 kebab-case 使用</p><p>示例：</p><p>组件引用</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> UserCreateDialog </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./components/UserCreateDialog.vue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>组件 dom 使用</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">user-create-dialog</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">user-create-dialog</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h3 id="_1-4-普通-变量-函数" tabindex="-1">1.4 普通（变量/函数） <a class="header-anchor" href="#_1-4-普通-变量-函数" aria-label="Permalink to &quot;1.4 普通（变量/函数）&quot;">​</a></h3><p>尽量使用完整单词表明（变量/函数）意义，而非缩写</p><p>不允许出现 a、b、c 等无意义命名变量</p><p>例外情况</p><p>作用域不大临时变量可以简写，比如：str，num，bol，obj，fun，arr。</p><p>循环变量可以简写，比如：i，j，k 等。</p><p>普通变量/函数</p><p>正例：userId、roleId、userCurrentItem、getUser()</p><p>反例：user_id、RoleId、usercurrentitem、getuser()</p><p>复数/数组形式命名需要加 s</p><p>正例：userIds、roleIds、userItems、getUsers()</p><p>反例：userids、Roleids、RoleIdS、getusers()</p><h3 id="_1-5-ts-类型命名" tabindex="-1">1.5 TS 类型命名 <a class="header-anchor" href="#_1-5-ts-类型命名" aria-label="Permalink to &quot;1.5 TS 类型命名&quot;">​</a></h3><p>interface/type 一律使用大驼峰命名方式</p><p>interface 以大写 I 开头</p><p>正例：IUserItem、IUserForm</p><p>反例：UserItem、iUserForm、I_User_Item</p><h3 id="_1-6-class-命名" tabindex="-1">1.6 class 命名 <a class="header-anchor" href="#_1-6-class-命名" aria-label="Permalink to &quot;1.6 class 命名&quot;">​</a></h3><p>class 命名全部采用小写方式，以中划线分隔（kebab-case）</p><p>示例：</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">label-name truncate h-full</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>id 使用小驼峰命名规则 示例：</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">labelName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h3 id="_1-7-常量-全局常量" tabindex="-1">1.7 常量/全局常量 <a class="header-anchor" href="#_1-7-常量-全局常量" aria-label="Permalink to &quot;1.7 常量/全局常量&quot;">​</a></h3><p>命名方法 : 全部大写</p><p>命名规范 : 使用大写字母和下划线来组合命名，下划线用以分割单词</p><p>示例：</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> AUTH_TOKEN_NAME </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">auth_token</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="_1-8-props-命名" tabindex="-1">1.8 props 命名 <a class="header-anchor" href="#_1-8-props-命名" aria-label="Permalink to &quot;1.8 props 命名&quot;">​</a></h3><p>声明时使用小驼峰，模版中使用 kebab-case</p><p>正例：</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  const props = withDefaults(</span></span>
<span class="line"><span style="color:#A6ACCD;">    defineProps&lt;{</span></span>
<span class="line"><span style="color:#A6ACCD;">      roleId: number | undefined;</span></span>
<span class="line"><span style="color:#A6ACCD;">    }&gt;(),</span></span>
<span class="line"><span style="color:#A6ACCD;">    {</span></span>
<span class="line"><span style="color:#A6ACCD;">      roleId: undefined,</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">  );</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">role-content</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:role-id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">currentRoleId</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">role-content</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>反例：</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  const props = withDefaults(</span></span>
<span class="line"><span style="color:#A6ACCD;">    defineProps&lt;{</span></span>
<span class="line"><span style="color:#A6ACCD;">      &#39;role-id&#39;: number | undefined;</span></span>
<span class="line"><span style="color:#A6ACCD;">    }&gt;(),</span></span>
<span class="line"><span style="color:#A6ACCD;">    {</span></span>
<span class="line"><span style="color:#A6ACCD;">      &#39;role-id&#39;: undefined,</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">  );</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">role-content</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:roleId</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">currentRoleId</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">role-content</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="_2-目录结构规范" tabindex="-1">2.目录结构规范 <a class="header-anchor" href="#_2-目录结构规范" aria-label="Permalink to &quot;2.目录结构规范&quot;">​</a></h2><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">|-.husky             -- Git Hooks 配置</span></span>
<span class="line"><span style="color:#A6ACCD;">|-config             -- 运行、打包配置文件夹</span></span>
<span class="line"><span style="color:#A6ACCD;">|-node_modules       -- 所有的项目依赖包</span></span>
<span class="line"><span style="color:#A6ACCD;">|-public             -- 网站角标等文件存放</span></span>
<span class="line"><span style="color:#A6ACCD;">|-src                -- 源文件目录，编写的代码基本都在这个目录下</span></span>
<span class="line"><span style="color:#A6ACCD;">---|api              -- api请求目录</span></span>
<span class="line"><span style="color:#A6ACCD;">---|assets           -- 静态文件目录</span></span>
<span class="line"><span style="color:#A6ACCD;">---|components       -- 全局自定义组件目录</span></span>
<span class="line"><span style="color:#A6ACCD;">------｜xxxx-xxxx    -- 全局组件</span></span>
<span class="line"><span style="color:#A6ACCD;">---|config           -- 全局配置目录，接口前缀、超时时间等</span></span>
<span class="line"><span style="color:#A6ACCD;">---|directive        -- 全局自定义指令目录</span></span>
<span class="line"><span style="color:#A6ACCD;">---|hooks            -- 公共hooks方法</span></span>
<span class="line"><span style="color:#A6ACCD;">---|interface        -- 接口类型目录</span></span>
<span class="line"><span style="color:#A6ACCD;">---|layouts          -- 全局模板页目录</span></span>
<span class="line"><span style="color:#A6ACCD;">---|router           -- vue-router配置目录</span></span>
<span class="line"><span style="color:#A6ACCD;">---|store            -- pinia目录</span></span>
<span class="line"><span style="color:#A6ACCD;">---|utils            -- 全局公共方法目录</span></span>
<span class="line"><span style="color:#A6ACCD;">---|views            -- 页面文件</span></span>
<span class="line"><span style="color:#A6ACCD;">---|App.vue          -- 根组件</span></span>
<span class="line"><span style="color:#A6ACCD;">---|main.ts          -- 入口文件</span></span>
<span class="line"><span style="color:#A6ACCD;">---|env.d.ts         -- 类文件(定义文件)，处理.vue结尾的文件在ts中不认可问题</span></span>
<span class="line"><span style="color:#A6ACCD;">|-.stylelintrc       -- scss配置文件</span></span>
<span class="line"><span style="color:#A6ACCD;">|-gitflow.md         -- gitflow 使用说明</span></span>
<span class="line"><span style="color:#A6ACCD;">|-index.html         -- 入口html文件</span></span>
<span class="line"><span style="color:#A6ACCD;">|-.eslintrc.js       -- Eslint配置文件</span></span>
<span class="line"><span style="color:#A6ACCD;">|-.gitignore         -- 配置git管理</span></span>
<span class="line"><span style="color:#A6ACCD;">|-package.json       -- 命令配置和包管理文件</span></span>
<span class="line"><span style="color:#A6ACCD;">|-tailwind.config.js -- tailwind配置文件</span></span>
<span class="line"><span style="color:#A6ACCD;">|-tsconfig.json      -- ts类型规则配置文件</span></span></code></pre></div><h2 id="_3-编码规范" tabindex="-1"><strong>3.编码规范</strong> <a class="header-anchor" href="#_3-编码规范" aria-label="Permalink to &quot;**3.编码规范**&quot;">​</a></h2><h3 id="_3-1-使用-es6-风格编码" tabindex="-1">3.1 使用 ES6 风格编码 <a class="header-anchor" href="#_3-1-使用-es6-风格编码" aria-label="Permalink to &quot;3.1 使用 ES6 风格编码&quot;">​</a></h3><h3 id="_3-2-定义变量" tabindex="-1">3.2 定义变量 <a class="header-anchor" href="#_3-2-定义变量" aria-label="Permalink to &quot;3.2 定义变量&quot;">​</a></h3><p>使用 let 和 const 关键字声明变量，避免使用 var</p><h3 id="_3-3-缩进" tabindex="-1">3.3 缩进 <a class="header-anchor" href="#_3-3-缩进" aria-label="Permalink to &quot;3.3 缩进&quot;">​</a></h3><p>缩进使用 2 个空格（一个 tab）</p><p>嵌套的（dom 节点/js 代码块）应该缩进</p><h3 id="_3-4-单引号-双引号-模版字符串使用规范" tabindex="-1">3.4 单引号/双引号/模版字符串使用规范 <a class="header-anchor" href="#_3-4-单引号-双引号-模版字符串使用规范" aria-label="Permalink to &quot;3.4 单引号/双引号/模版字符串使用规范&quot;">​</a></h3><p>HTML 属性值使用双引号</p><p>js/ts 静态字符串一律使用单引号</p><p>js/ts 动态字符串使用模版字符串</p><p>正例：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">foobar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> b </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>反例：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">foobar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> b </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>注意事项： 避免在模板字符串中添加复杂的逻辑，将逻辑封装在函数中，并在模板字符串中调用该函数，这可能导致 XSS（跨站脚本攻击）漏洞。使用适当的字符串转义来避免此类漏洞</p><p>避免在模板字符串中使用 \${} 表达式嵌入用户输入的数据</p><h3 id="_3-5-解构赋值" tabindex="-1">3.5 解构赋值 <a class="header-anchor" href="#_3-5-解构赋值" aria-label="Permalink to &quot;3.5 解构赋值&quot;">​</a></h3><p>数组成员对变量赋值时，优先使用解构赋值</p><p>正例：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">first</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> second</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> arr</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>反例：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> first </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> arr[</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> second </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> arr[</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>函数的参数如果是对象的成员，优先使用解构赋值 正例：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getFullName</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">firstName</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">lastName</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getFullName</span><span style="color:#89DDFF;">({</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">firstName</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">lastName</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">})</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span></code></pre></div><p>反例：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getFullName</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">user</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">firstName</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">user</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">firstName</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">lastName</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">user</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">lastName</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_3-6-拷贝数组" tabindex="-1">3.6 拷贝数组 <a class="header-anchor" href="#_3-6-拷贝数组" aria-label="Permalink to &quot;3.6 拷贝数组&quot;">​</a></h3><p>使用扩展运算符（...）拷贝数组。</p><p>正例：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> items </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> itemsCopy </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">items]</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>反例：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> items </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> itemsCopy </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> items</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="_3-7-箭头函数" tabindex="-1">3.7 箭头函数 <a class="header-anchor" href="#_3-7-箭头函数" aria-label="Permalink to &quot;3.7 箭头函数&quot;">​</a></h3><p>需要使用函数表达式的场合，尽量用箭头函数代替。</p><p>正例：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> boundMethod </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(...</span><span style="color:#A6ACCD;font-style:italic;">params</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> method</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">apply</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">this,</span><span style="color:#A6ACCD;"> params)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>反例：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> self </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> boundMethod </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(...</span><span style="color:#A6ACCD;font-style:italic;">params</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">method</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">apply</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">params</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><h3 id="_3-8-模块" tabindex="-1">3.8 模块 <a class="header-anchor" href="#_3-8-模块" aria-label="Permalink to &quot;3.8 模块&quot;">​</a></h3><p>如果模块只有一个输出值，就使用 export default，如果模块有多个输出值，就不使用 export default，export default 与普通的 export 不要同时使用</p><p>正例：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> myObject </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./importModule</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>反例：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> myObject </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./importModule</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="_4-注释规范" tabindex="-1"><strong>4.注释规范</strong> <a class="header-anchor" href="#_4-注释规范" aria-label="Permalink to &quot;**4.注释规范**&quot;">​</a></h2><h3 id="_4-1-务必添加注释列表" tabindex="-1">4.1 务必添加注释列表 <a class="header-anchor" href="#_4-1-务必添加注释列表" aria-label="Permalink to &quot;4.1 务必添加注释列表&quot;">​</a></h3><p>公共组件使用说明</p><p>各组件中重要函数或者类说明</p><p>复杂的业务逻辑处理说明</p><p>特殊情况的代码处理说明,对于代码中特殊用途的变量、存在临界值、函数中使用的 hack、使用了某种算法或思路等需要进行注释描述</p><p>多重 if 判断语句</p><p>注释块必须以 /<strong>（至少两个星号）开头</strong>/</p><p>单行注释使用 //</p><p>注意事项</p><p>注释单独一行，不要在代码后的同一行内加注释</p><p>正例：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 姓名</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>反例：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 姓名</span></span></code></pre></div><h3 id="_4-2-总体格式示例" tabindex="-1">4.2 总体格式示例 <a class="header-anchor" href="#_4-2-总体格式示例" aria-label="Permalink to &quot;4.2 总体格式示例&quot;">​</a></h3><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    // url 声明字段，单行注释</span></span>
<span class="line"><span style="color:#A6ACCD;">    let url = &quot;http://www.baidu.com&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">   /**</span></span>
<span class="line"><span style="color:#A6ACCD;">     *  @编码人 | 时间 | 操作</span></span>
<span class="line"><span style="color:#A6ACCD;">     *  描述</span></span>
<span class="line"><span style="color:#A6ACCD;">     *  @return(表示有返回值) {返回类型}</span></span>
<span class="line"><span style="color:#A6ACCD;">     *  @param (表示参数描述) {参数类型} | 参数变量名 | 参数描述</span></span>
<span class="line"><span style="color:#A6ACCD;">     **/</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    /**</span></span>
<span class="line"><span style="color:#A6ACCD;">     *  @Asa 2021.11.15</span></span>
<span class="line"><span style="color:#A6ACCD;">     *  获取url值</span></span>
<span class="line"><span style="color:#A6ACCD;">     *  @return {string} </span></span>
<span class="line"><span style="color:#A6ACCD;">     **/</span></span>
<span class="line"><span style="color:#A6ACCD;">    function getUrl (): string { return url}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    /**</span></span>
<span class="line"><span style="color:#A6ACCD;">     *  @Asa 2021.8.15</span></span>
<span class="line"><span style="color:#A6ACCD;">     *  设置url值</span></span>
<span class="line"><span style="color:#A6ACCD;">     *  @param {string} u 新的url值</span></span>
<span class="line"><span style="color:#A6ACCD;">     *  </span></span>
<span class="line"><span style="color:#A6ACCD;">     *  @XXX 2021.11.15 优化 | 新增</span></span>
<span class="line"><span style="color:#A6ACCD;">     *  描述 .... 与上述结构一样</span></span>
<span class="line"><span style="color:#A6ACCD;">     **/</span></span>
<span class="line"><span style="color:#A6ACCD;">    function setUrl (u:string): void {</span></span>
<span class="line"><span style="color:#A6ACCD;">        url = u</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div>`,132),e=[o];function t(c,r,i,y,D,C){return n(),a("div",null,e)}const d=s(p,[["render",t]]);export{F as __pageData,d as default};
